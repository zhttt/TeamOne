<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mybatis框架只有接口 没有实现类 mybatis的映射文件就相当于是接口的实现类 主要用来编写sql语句 mapper 需要与映射接口对应 
	namespace 配置类的全限定名 -->
<mapper namespace="com.jk.dao.LabelMapper">
       <!-- 线路关联表 -->
       <resultMap type="com.jk.bean.wb.Label" id="label">
           <id property="lid" column="lid"/>
           <result property="lname" column="lname"/>
           <result property="laddress" column="laddress"/>
       </resultMap>


      <!-- 查询标签(所有) -->
      <select id="getLabelByWhere" resultMap="label">
          select
            `lid`,
            `laddress`,
            `lname`
          from `online`.`label`
      </select>

      <!-- 查询标签（分页） -->
      <select id="getLabelByPage" resultMap="label">
           select
           `lid`,
           `laddress`,
           `lname`
           from `online`.`label`
           limit #{begin}, #{end};
      </select>

     <!-- 修改返回一调数据 -->
     <select id="getLabel" resultType="com.jk.bean.wb.Label">
          select
           `lid`,
           `laddress`,
           `lname`
           from `online`.`label`
           WHERE lid = #{id}
     </select>

     <!-- 新增标签 -->
     <insert id="addbiaoqian" >
         INSERT INTO `online`.`label`
            (
             `laddress`,
             `lname`)
            VALUES (
                    #{laddress},
                    #{lname});
     </insert>

     <!-- 修改标签 -->
     <update id="updatebiaoqian" parameterType="com.jk.bean.wb.Label">
         UPDATE `online`.`label`
            SET
              `laddress` = #{laddress},
              `lname` = #{lname}
            WHERE `lid` = #{lid};
     </update>

    <!-- 删除标签 -->
    <delete id="deletebiaoqian">
        DELETE
        FROM `online`.`label`
        WHERE `lid` in (${ids});
    </delete>
 </mapper>
